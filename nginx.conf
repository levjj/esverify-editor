daemon off;
user nginx;
worker_processes 1;
error_log /dev/stderr info;

pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /dev/stdout;
  sendfile on;
  keepalive_timeout 65;

  server {
    listen       *:80;
    server_name  esverify.org;
    return       301 https://esverify.org$request_uri;
    location /.well-known/acme-challenge {
      root /var/letsencrypt/www;
    }
  }

  server {
    listen       *:443 ssl;
    server_name  esverify.org;

    client_max_body_size 80M;

    ssl on;

    ssl_certificate           /etc/letsencrypt/live/esverify.org/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/esverify.org/privkey.pem;
    ssl_session_cache         shared:SSL:10m;
    ssl_session_timeout       5m;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparams.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location /.well-known/acme-challenge {
      root /var/letsencrypt/www;
    }

    location / {

      root /srv/esverify-web/build;
      index index.html;
      try_files $uri $uri.html $uri/index.html =404;

      proxy_read_timeout    90;
      proxy_connect_timeout 90;
      proxy_redirect        off;
      proxy_set_header      Host $host;
      proxy_set_header      X-Real-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;

      if ($request_method = POST) {
        proxy_pass            http://127.0.0.1:3000;
      }
    }

    error_page 404             /404.html;
    error_page 500 502 503 504 /500.html;
  }
}
